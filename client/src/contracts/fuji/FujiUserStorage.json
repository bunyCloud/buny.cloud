{
  "address": "0x3588462a8680deEAd45dce37f2980CE11a77999a",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "messageId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "MessageAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encryptedKey",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "UserRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "addMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_encryptedKey",
          "type": "string"
        }
      ],
      "name": "addWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_messageId",
          "type": "uint256"
        }
      ],
      "name": "deleteMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getEncryptedKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getMessages",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedKey",
              "type": "string"
            }
          ],
          "internalType": "struct UserKeyStorage.UserKeyInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messageIdToMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messageIdToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userKeys",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedKey",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userMessageIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userMessages",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6ed0e44880b68d86c4a952d99381e19217916ed7d183251b8ff399b4287f3860",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0xDF07ae87A5780254b9D6ba75e046Ac15f6987f7e",
    "transactionIndex": 2,
    "gasUsed": "1728968",
    "logsBloom": "0x
    "blockHash": "0x0c0099d4a6d8f6eac8c71976d06faf0e19eaa73ce4a50a76009d0df7ed746661",
    "transactionHash": "0x6ed0e44880b68d86c4a952d99381e19217916ed7d183251b8ff399b4287f3860",
    "logs": [],
    "blockNumber": 25559374,
    "cumulativeGasUsed": "1835354",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "045cf2de6b53dea70135b46958a541e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"UserRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"addMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_encryptedKey\",\"type\":\"string\"}],\"name\":\"addWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_messageId\",\"type\":\"uint256\"}],\"name\":\"deleteMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getEncryptedKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getMessages\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"internalType\":\"struct UserKeyStorage.UserKeyInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messageIdToMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messageIdToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userKeys\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMessageIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMessages\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserKeyStorage.sol\":\"UserKeyStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/UserKeyStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract UserKeyStorage {\\r\\n    \\r\\n    struct UserKeyInfo {\\r\\n        address userAddress;\\r\\n        string username;\\r\\n        string encryptedKey;\\r\\n    }\\r\\n    \\r\\n    string public contractName = 'Buny User Directory';\\r\\n    UserKeyInfo[] public userKeys;\\r\\n    uint256 public messageCounter = 0;\\r\\n\\r\\n    mapping(address => uint256[]) public userMessageIds; \\r\\n    mapping(address => string) public userToKey;\\r\\n    mapping(address => uint256) public userIndex;\\r\\n    mapping(address => string[]) public userMessages;\\r\\n    mapping(uint256 => string) public messageIdToMessage;\\r\\n    mapping(uint256 => address) public messageIdToOwner;  // mapping to track owner of each message\\r\\n\\r\\n    event UserRemoved(address indexed userAddress);\\r\\n    event UserAdded(address indexed userAddress, string username, string encryptedKey);\\r\\n    event MessageAdded(address indexed userAddress, uint256 messageId, string message);\\r\\n    \\r\\n    modifier userExists(address _userAddress) {\\r\\n        require(bytes(userToKey[_userAddress]).length != 0, \\\"User not found\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier userDoesNotExist(address _userAddress) {\\r\\n        require(bytes(userToKey[_userAddress]).length == 0, \\\"User already exists\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    function addWallet(address _userAddress, string memory _username, string memory _encryptedKey) public userDoesNotExist(_userAddress) {\\r\\n        userKeys.push(UserKeyInfo(_userAddress, _username, _encryptedKey));\\r\\n        userToKey[_userAddress] = _encryptedKey;\\r\\n        userIndex[_userAddress] = userKeys.length - 1;\\r\\n        emit UserAdded(_userAddress, _username, _encryptedKey); \\r\\n    }\\r\\n\\r\\n    function getUserInfo(address _userAddress) public view userExists(_userAddress) returns (UserKeyInfo memory) {\\r\\n        return userKeys[userIndex[_userAddress]];\\r\\n    }\\r\\n\\r\\n    function getEncryptedKey(address _userAddress) public view returns (string memory) {\\r\\n        return userToKey[_userAddress];\\r\\n    }\\r\\n    \\r\\n    function getTotalUsers() public view returns (uint256) {\\r\\n        return userKeys.length;\\r\\n    }\\r\\n\\r\\n    function getAllUsers() public view returns (address[] memory, string[] memory, string[] memory) {\\r\\n        address[] memory addresses = new address[](userKeys.length);\\r\\n        string[] memory usernames = new string[](userKeys.length);\\r\\n        string[] memory encryptedKeys = new string[](userKeys.length);\\r\\n\\r\\n        for (uint256 i = 0; i < userKeys.length; i++) {\\r\\n            addresses[i] = userKeys[i].userAddress;\\r\\n            usernames[i] = userKeys[i].username;\\r\\n            encryptedKeys[i] = userKeys[i].encryptedKey;\\r\\n        }\\r\\n\\r\\n        return (addresses, usernames, encryptedKeys);\\r\\n    }\\r\\n\\r\\n   function getMessages(address _userAddress) public view userExists(_userAddress) returns (uint256[] memory, string[] memory) {\\r\\n    return (userMessageIds[_userAddress], userMessages[_userAddress]);\\r\\n}\\r\\n   \\r\\n    function addMessage(address _userAddress, string memory _message) public userExists(_userAddress) {\\r\\n        userMessages[_userAddress].push(_message);\\r\\n        messageCounter++;\\r\\n        messageIdToMessage[messageCounter] = _message;\\r\\n        messageIdToOwner[messageCounter] = _userAddress; // track the owner of the message\\r\\n        userMessageIds[_userAddress].push(messageCounter);\\r\\n        \\r\\n        emit MessageAdded(_userAddress, messageCounter, _message);\\r\\n    }\\r\\n\\r\\n   \\r\\n    function deleteMessage(uint256 _messageId) public {\\r\\n        require(_messageId <= messageCounter, \\\"Message ID does not exist\\\");\\r\\n        require(messageIdToOwner[_messageId] == msg.sender, \\\"Only the owner can delete this message\\\");\\r\\n        delete messageIdToMessage[_messageId];\\r\\n\\r\\n        address owner = messageIdToOwner[_messageId];\\r\\n        uint256 indexToDelete;\\r\\n        bool found = false;\\r\\n        for(uint256 i = 0; i < userMessageIds[owner].length; i++) {\\r\\n            if(userMessageIds[owner][i] == _messageId) {\\r\\n                indexToDelete = i;\\r\\n                found = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        require(found, \\\"Message not found for the user\\\");\\r\\n\\r\\n        userMessages[owner][indexToDelete] = \\\"\\\";\\r\\n\\r\\n        for(uint256 i = indexToDelete; i < userMessageIds[owner].length - 1; i++) {\\r\\n            userMessageIds[owner][i] = userMessageIds[owner][i + 1];\\r\\n        }\\r\\n\\r\\n        userMessageIds[owner].pop();\\r\\n    }\\r\\n\\r\\n    function removeUser(address _userAddress) public userExists(_userAddress) {\\r\\n        require(_userAddress == msg.sender, \\\"Only the user can remove themselves\\\"); // Ensuring only the user can remove their own details\\r\\n\\r\\n        delete userToKey[_userAddress];\\r\\n        for (uint256 i = 0; i < userMessageIds[_userAddress].length; i++) {\\r\\n            delete messageIdToMessage[userMessageIds[_userAddress][i]];\\r\\n        }\\r\\n        delete userMessageIds[_userAddress];\\r\\n        delete userMessages[_userAddress];\\r\\n\\r\\n        uint256 indexToDelete = userIndex[_userAddress];\\r\\n        for (uint256 i = indexToDelete; i < userKeys.length - 1; i++) {\\r\\n            userKeys[i] = userKeys[i + 1];\\r\\n            userIndex[userKeys[i].userAddress] = i;\\r\\n        }\\r\\n\\r\\n        userKeys.pop();\\r\\n        delete userIndex[_userAddress];\\r\\n        emit UserRemoved(_userAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3c61ec4eac9ccd268499e8e92d12d9f591a2b9c5746220fa12e03ad67d382bca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052601360809081527f42756e792055736572204469726563746f72790000000000000000000000000060a0526000906200003e9082620000fd565b5060006002553480156200005157600080fd5b50620001c9565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200008357607f821691505b602082108103620000a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f857600081815260208120601f850160051c81016020861015620000d35750805b601f850160051c820191505b81811015620000f457828155600101620000df565b5050505b505050565b81516001600160401b0381111562000119576200011962000058565b62000131816200012a84546200006e565b84620000aa565b602080601f831160018114620001695760008415620001505750858301515b600019600386901b1c1916600185901b178555620000f4565b600085815260208120601f198616915b828110156200019a5788860151825594840194600190910190840162000179565b5085821015620001b95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611dc180620001d96000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c806308eedccd146100eb5780634b74a1f114610116578063529c7588146101365780636386c1c71461014d57806375d0c0dc1461016d5780637e1555f9146101755780639428cda31461018a578063985751881461019d5780639be572f6146101b05780639c6a1172146101b8578063b2f71322146101f9578063b888690a1461021a578063bc7aa54d1461022d578063c772af2a14610240578063c96679fe14610253578063e2842d7914610273578063f8dba56d1461028a578063f8dbeb0f1461029d575b600080fd5b6100fe6100f9366004611694565b6102b0565b60405161010d939291906116f3565b60405180910390f35b61012961012436600461174f565b610400565b60405161010d9190611771565b61013f60025481565b60405190815260200161010d565b61016061015b36600461174f565b6104ac565b60405161010d9190611784565b6101296106b4565b61018861018336600461187a565b610742565b005b6101296101983660046118ed565b6108f9565b6101886101ab36600461174f565b610931565b60015461013f565b6101e16101c6366004611694565b6008602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b61020c61020736600461174f565b610c7d565b60405161010d92919061196c565b610188610228366004611694565b610e15565b61018861023b3660046119b9565b611126565b61012961024e366004611694565b611265565b61013f61026136600461174f565b60056020526000908152604090205481565b61027b61127e565b60405161010d93929190611a06565b61013f6102983660046118ed565b61159b565b6101296102ab36600461174f565b6115cc565b600181815481106102c057600080fd5b6000918252602090912060039091020180546001820180546001600160a01b039092169350906102ef90611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90611a71565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b50505050509080600201805461037d90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990611a71565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905083565b6001600160a01b038116600090815260046020526040902080546060919061042790611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461045390611a71565b80156104a05780601f10610475576101008083540402835291602001916104a0565b820191906000526020600020905b81548152906001019060200180831161048357829003601f168201915b50505050509050919050565b6104d9604051806060016040528060006001600160a01b0316815260200160608152602001606081525090565b6001600160a01b038216600090815260046020526040902080548391906104ff90611a71565b90506000036105295760405162461bcd60e51b815260040161052090611aa5565b60405180910390fd5b6001600160a01b03831660009081526005602052604090205460018054909190811061055757610557611acd565b6000918252602091829020604080516060810190915260039092020180546001600160a01b03168252600181018054929391929184019161059790611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611a71565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050815260200160028201805461062990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461065590611a71565b80156106a25780601f10610677576101008083540402835291602001916106a2565b820191906000526020600020905b81548152906001019060200180831161068557829003601f168201915b50505050508152505091505b50919050565b600080546106c190611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed90611a71565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505081565b6001600160a01b0383166000908152600460205260409020805484919061076890611a71565b1590506107ad5760405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b6044820152606401610520565b604080516060810182526001600160a01b0386811682526020820186815292820185905260018054808201825560009190915282517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b031916919093161782559251919290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7909101906108539082611b47565b50604082015160028201906108689082611b47565b5050506001600160a01b038416600090815260046020526040902061088d8382611b47565b506001805461089c9190611c16565b6001600160a01b038516600081815260056020526040908190209290925590517f8eab1db142a914aff8b515eedb9177bd7effaef6d714c41e30bdf15206778607906108eb9086908690611c2f565b60405180910390a250505050565b6006602052816000526040600020818154811061091557600080fd5b906000526020600020016000915091505080546106c190611a71565b6001600160a01b0381166000908152600460205260409020805482919061095790611a71565b90506000036109785760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b03821633146109dc5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792074686520757365722063616e2072656d6f7665207468656d73656c60448201526276657360e81b6064820152608401610520565b6001600160a01b03821660009081526004602052604081206109fd916115e5565b60005b6001600160a01b038316600090815260036020526040902054811015610a86576001600160a01b03831660009081526003602052604081208054600792919084908110610a4f57610a4f611acd565b906000526020600020015481526020019081526020016000206000610a7491906115e5565b80610a7e81611c54565b915050610a00565b506001600160a01b0382166000908152600360205260408120610aa891611622565b6001600160a01b0382166000908152600660205260408120610ac991611640565b6001600160a01b038216600090815260056020526040902054805b60018054610af29190611c16565b811015610be2576001610b058282611c6d565b81548110610b1557610b15611acd565b906000526020600020906003020160018281548110610b3657610b36611acd565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180820190610b7790840182611c80565b50600281810190610b8a90840182611c80565b50905050806005600060018481548110610ba657610ba6611acd565b600091825260208083206003909202909101546001600160a01b0316835282019290925260400190205580610bda81611c54565b915050610ae4565b506001805480610bf457610bf4611d54565b60008281526020812060036000199093019283020180546001600160a01b031916815590610c2560018301826115e5565b610c336002830160006115e5565b505090556001600160a01b038316600081815260056020526040808220829055517fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d9190a2505050565b6001600160a01b038116600090815260046020526040902080546060918291849190610ca890611a71565b9050600003610cc95760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b0384166000908152600360209081526040808320600683529281902083548251818502810185019093528083529092849190830182828015610d3157602002820191906000526020600020905b815481526020019060010190808311610d1d575b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610e05578382906000526020600020018054610d7890611a71565b80601f0160208091040260200160405190810160405280929190818152602001828054610da490611a71565b8015610df15780601f10610dc657610100808354040283529160200191610df1565b820191906000526020600020905b815481529060010190602001808311610dd457829003601f168201915b505050505081526020019060010190610d59565b5050505090509250925050915091565b600254811115610e635760405162461bcd60e51b815260206004820152601960248201527813595cdcd859d948125108191bd95cc81b9bdd08195e1a5cdd603a1b6044820152606401610520565b6000818152600860205260409020546001600160a01b03163314610ed85760405162461bcd60e51b815260206004820152602660248201527f4f6e6c7920746865206f776e65722063616e2064656c6574652074686973206d60448201526565737361676560d01b6064820152608401610520565b6000818152600760205260408120610eef916115e5565b6000818152600860205260408120546001600160a01b03169080805b6001600160a01b038416600090815260036020526040902054811015610f86576001600160a01b0384166000908152600360205260409020805486919083908110610f5857610f58611acd565b906000526020600020015403610f745780925060019150610f86565b80610f7e81611c54565b915050610f0b565b5080610fd45760405162461bcd60e51b815260206004820152601e60248201527f4d657373616765206e6f7420666f756e6420666f7220746865207573657200006044820152606401610520565b604080516020808201835260008083526001600160a01b038716815260069091529190912080548490811061100b5761100b611acd565b9060005260206000200190816110219190611b47565b50815b6001600160a01b03841660009081526003602052604090205461104990600190611c16565b8110156110e2576001600160a01b0384166000908152600360205260409020611073826001611c6d565b8154811061108357611083611acd565b906000526020600020015460036000866001600160a01b03166001600160a01b0316815260200190815260200160002082815481106110c4576110c4611acd565b600091825260209091200155806110da81611c54565b915050611024565b506001600160a01b038316600090815260036020526040902080548061110a5761110a611d54565b6001900381819060005260206000200160009055905550505050565b6001600160a01b0382166000908152600460205260409020805483919061114c90611a71565b905060000361116d5760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b03831660009081526006602090815260408220805460018101825590835291200161119f8382611b47565b50600280549060006111b083611c54565b909155505060025460009081526007602052604090206111d08382611b47565b5060028054600090815260086020908152604080832080546001600160a01b0319166001600160a01b038916908117909155808452600383528184208554815460018101835591865293909420909301919091559154915190917f338f08987402f06ff139973e01a7bfc941fdb1a871ee7ce4116fed2ecfe6c5939161125891908690611d6a565b60405180910390a2505050565b600760205260009081526040902080546106c190611a71565b606080606060006001805490506001600160401b038111156112a2576112a26117d8565b6040519080825280602002602001820160405280156112cb578160200160208202803683370190505b506001549091506000906001600160401b038111156112ec576112ec6117d8565b60405190808252806020026020018201604052801561131f57816020015b606081526020019060019003908161130a5790505b506001549091506000906001600160401b03811115611340576113406117d8565b60405190808252806020026020018201604052801561137357816020015b606081526020019060019003908161135e5790505b50905060005b60015481101561158e576001818154811061139657611396611acd565b600091825260209091206003909102015484516001600160a01b03909116908590839081106113c7576113c7611acd565b60200260200101906001600160a01b031690816001600160a01b031681525050600181815481106113fa576113fa611acd565b9060005260206000209060030201600101805461141690611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461144290611a71565b801561148f5780601f106114645761010080835404028352916020019161148f565b820191906000526020600020905b81548152906001019060200180831161147257829003601f168201915b50505050508382815181106114a6576114a6611acd565b6020026020010181905250600181815481106114c4576114c4611acd565b906000526020600020906003020160020180546114e090611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461150c90611a71565b80156115595780601f1061152e57610100808354040283529160200191611559565b820191906000526020600020905b81548152906001019060200180831161153c57829003601f168201915b505050505082828151811061157057611570611acd565b6020026020010181905250808061158690611c54565b915050611379565b5091959094509092509050565b600360205281600052604060002081815481106115b757600080fd5b90600052602060002001600091509150505481565b600460205260009081526040902080546106c190611a71565b5080546115f190611a71565b6000825580601f10611601575050565b601f01602090049060005260206000209081019061161f919061165e565b50565b508054600082559060005260206000209081019061161f919061165e565b508054600082559060005260206000209081019061161f9190611677565b5b80821115611673576000815560010161165f565b5090565b8082111561167357600061168b82826115e5565b50600101611677565b6000602082840312156116a657600080fd5b5035919050565b6000815180845260005b818110156116d3576020818501810151868301820152016116b7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0384168152606060208201819052600090611717908301856116ad565b828103604084015261172981856116ad565b9695505050505050565b80356001600160a01b038116811461174a57600080fd5b919050565b60006020828403121561176157600080fd5b61176a82611733565b9392505050565b60208152600061176a60208301846116ad565b602080825282516001600160a01b031682820152820151606060408301526000906117b260808401826116ad565b90506040840151601f198483030160608501526117cf82826116ad565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117ff57600080fd5b81356001600160401b0380821115611819576118196117d8565b604051601f8301601f19908116603f01168101908282118183101715611841576118416117d8565b8160405283815286602085880101111561185a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561188f57600080fd5b61189884611733565b925060208401356001600160401b03808211156118b457600080fd5b6118c0878388016117ee565b935060408601359150808211156118d657600080fd5b506118e3868287016117ee565b9150509250925092565b6000806040838503121561190057600080fd5b61190983611733565b946020939093013593505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561195f57828403895261194d8483516116ad565b98850198935090840190600101611935565b5091979650505050505050565b604080825283519082018190526000906020906060840190828701845b828110156119a557815184529284019290840190600101611989565b505050838103828501526117298186611917565b600080604083850312156119cc57600080fd5b6119d583611733565b915060208301356001600160401b038111156119f057600080fd5b6119fc858286016117ee565b9150509250929050565b606080825284519082018190526000906020906080840190828801845b82811015611a485781516001600160a01b031684529284019290840190600101611a23565b50505083810382850152611a5c8187611917565b91505082810360408401526117298185611917565b600181811c90821680611a8557607f821691505b6020821081036106ae57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d155cd95c881b9bdd08199bdd5b9960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b601f821115611b2d57600081815260208120601f850160051c81016020861015611b0a5750805b601f850160051c820191505b81811015611b2957828155600101611b16565b5050505b505050565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115611b6057611b606117d8565b611b7481611b6e8454611a71565b84611ae3565b602080601f831160018114611ba35760008415611b915750858301515b611b9b8582611b32565b865550611b29565b600085815260208120601f198616915b82811015611bd257888601518255948401946001909101908401611bb3565b5085821015611bf05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115611c2957611c29611c00565b92915050565b604081526000611c4260408301856116ad565b82810360208401526117cf81856116ad565b600060018201611c6657611c66611c00565b5060010190565b80820180821115611c2957611c29611c00565b818103611c8b575050565b611c958254611a71565b6001600160401b03811115611cac57611cac6117d8565b611cba81611b6e8454611a71565b6000601f821160018114611ce85760008315611cd65750848201545b611ce08482611b32565b855550611d4d565b600085815260209020601f19841690600086815260209020845b83811015611d225782860154825560019586019590910190602001611d02565b5085831015611d405781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fd5b828152604060208201526000611d8360408301846116ad565b94935050505056fea26469706673582212204bf21b896a64ecb45f0dd45058ebe0ade0df220e65dbd3f39390b78256d44d2864736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100e65760003560e01c806308eedccd146100eb5780634b74a1f114610116578063529c7588146101365780636386c1c71461014d57806375d0c0dc1461016d5780637e1555f9146101755780639428cda31461018a578063985751881461019d5780639be572f6146101b05780639c6a1172146101b8578063b2f71322146101f9578063b888690a1461021a578063bc7aa54d1461022d578063c772af2a14610240578063c96679fe14610253578063e2842d7914610273578063f8dba56d1461028a578063f8dbeb0f1461029d575b600080fd5b6100fe6100f9366004611694565b6102b0565b60405161010d939291906116f3565b60405180910390f35b61012961012436600461174f565b610400565b60405161010d9190611771565b61013f60025481565b60405190815260200161010d565b61016061015b36600461174f565b6104ac565b60405161010d9190611784565b6101296106b4565b61018861018336600461187a565b610742565b005b6101296101983660046118ed565b6108f9565b6101886101ab36600461174f565b610931565b60015461013f565b6101e16101c6366004611694565b6008602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b61020c61020736600461174f565b610c7d565b60405161010d92919061196c565b610188610228366004611694565b610e15565b61018861023b3660046119b9565b611126565b61012961024e366004611694565b611265565b61013f61026136600461174f565b60056020526000908152604090205481565b61027b61127e565b60405161010d93929190611a06565b61013f6102983660046118ed565b61159b565b6101296102ab36600461174f565b6115cc565b600181815481106102c057600080fd5b6000918252602090912060039091020180546001820180546001600160a01b039092169350906102ef90611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90611a71565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b50505050509080600201805461037d90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990611a71565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905083565b6001600160a01b038116600090815260046020526040902080546060919061042790611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461045390611a71565b80156104a05780601f10610475576101008083540402835291602001916104a0565b820191906000526020600020905b81548152906001019060200180831161048357829003601f168201915b50505050509050919050565b6104d9604051806060016040528060006001600160a01b0316815260200160608152602001606081525090565b6001600160a01b038216600090815260046020526040902080548391906104ff90611a71565b90506000036105295760405162461bcd60e51b815260040161052090611aa5565b60405180910390fd5b6001600160a01b03831660009081526005602052604090205460018054909190811061055757610557611acd565b6000918252602091829020604080516060810190915260039092020180546001600160a01b03168252600181018054929391929184019161059790611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611a71565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050815260200160028201805461062990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461065590611a71565b80156106a25780601f10610677576101008083540402835291602001916106a2565b820191906000526020600020905b81548152906001019060200180831161068557829003601f168201915b50505050508152505091505b50919050565b600080546106c190611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed90611a71565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505081565b6001600160a01b0383166000908152600460205260409020805484919061076890611a71565b1590506107ad5760405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b6044820152606401610520565b604080516060810182526001600160a01b0386811682526020820186815292820185905260018054808201825560009190915282517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b031916919093161782559251919290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7909101906108539082611b47565b50604082015160028201906108689082611b47565b5050506001600160a01b038416600090815260046020526040902061088d8382611b47565b506001805461089c9190611c16565b6001600160a01b038516600081815260056020526040908190209290925590517f8eab1db142a914aff8b515eedb9177bd7effaef6d714c41e30bdf15206778607906108eb9086908690611c2f565b60405180910390a250505050565b6006602052816000526040600020818154811061091557600080fd5b906000526020600020016000915091505080546106c190611a71565b6001600160a01b0381166000908152600460205260409020805482919061095790611a71565b90506000036109785760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b03821633146109dc5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792074686520757365722063616e2072656d6f7665207468656d73656c60448201526276657360e81b6064820152608401610520565b6001600160a01b03821660009081526004602052604081206109fd916115e5565b60005b6001600160a01b038316600090815260036020526040902054811015610a86576001600160a01b03831660009081526003602052604081208054600792919084908110610a4f57610a4f611acd565b906000526020600020015481526020019081526020016000206000610a7491906115e5565b80610a7e81611c54565b915050610a00565b506001600160a01b0382166000908152600360205260408120610aa891611622565b6001600160a01b0382166000908152600660205260408120610ac991611640565b6001600160a01b038216600090815260056020526040902054805b60018054610af29190611c16565b811015610be2576001610b058282611c6d565b81548110610b1557610b15611acd565b906000526020600020906003020160018281548110610b3657610b36611acd565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180820190610b7790840182611c80565b50600281810190610b8a90840182611c80565b50905050806005600060018481548110610ba657610ba6611acd565b600091825260208083206003909202909101546001600160a01b0316835282019290925260400190205580610bda81611c54565b915050610ae4565b506001805480610bf457610bf4611d54565b60008281526020812060036000199093019283020180546001600160a01b031916815590610c2560018301826115e5565b610c336002830160006115e5565b505090556001600160a01b038316600081815260056020526040808220829055517fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d9190a2505050565b6001600160a01b038116600090815260046020526040902080546060918291849190610ca890611a71565b9050600003610cc95760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b0384166000908152600360209081526040808320600683529281902083548251818502810185019093528083529092849190830182828015610d3157602002820191906000526020600020905b815481526020019060010190808311610d1d575b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610e05578382906000526020600020018054610d7890611a71565b80601f0160208091040260200160405190810160405280929190818152602001828054610da490611a71565b8015610df15780601f10610dc657610100808354040283529160200191610df1565b820191906000526020600020905b815481529060010190602001808311610dd457829003601f168201915b505050505081526020019060010190610d59565b5050505090509250925050915091565b600254811115610e635760405162461bcd60e51b815260206004820152601960248201527813595cdcd859d948125108191bd95cc81b9bdd08195e1a5cdd603a1b6044820152606401610520565b6000818152600860205260409020546001600160a01b03163314610ed85760405162461bcd60e51b815260206004820152602660248201527f4f6e6c7920746865206f776e65722063616e2064656c6574652074686973206d60448201526565737361676560d01b6064820152608401610520565b6000818152600760205260408120610eef916115e5565b6000818152600860205260408120546001600160a01b03169080805b6001600160a01b038416600090815260036020526040902054811015610f86576001600160a01b0384166000908152600360205260409020805486919083908110610f5857610f58611acd565b906000526020600020015403610f745780925060019150610f86565b80610f7e81611c54565b915050610f0b565b5080610fd45760405162461bcd60e51b815260206004820152601e60248201527f4d657373616765206e6f7420666f756e6420666f7220746865207573657200006044820152606401610520565b604080516020808201835260008083526001600160a01b038716815260069091529190912080548490811061100b5761100b611acd565b9060005260206000200190816110219190611b47565b50815b6001600160a01b03841660009081526003602052604090205461104990600190611c16565b8110156110e2576001600160a01b0384166000908152600360205260409020611073826001611c6d565b8154811061108357611083611acd565b906000526020600020015460036000866001600160a01b03166001600160a01b0316815260200190815260200160002082815481106110c4576110c4611acd565b600091825260209091200155806110da81611c54565b915050611024565b506001600160a01b038316600090815260036020526040902080548061110a5761110a611d54565b6001900381819060005260206000200160009055905550505050565b6001600160a01b0382166000908152600460205260409020805483919061114c90611a71565b905060000361116d5760405162461bcd60e51b815260040161052090611aa5565b6001600160a01b03831660009081526006602090815260408220805460018101825590835291200161119f8382611b47565b50600280549060006111b083611c54565b909155505060025460009081526007602052604090206111d08382611b47565b5060028054600090815260086020908152604080832080546001600160a01b0319166001600160a01b038916908117909155808452600383528184208554815460018101835591865293909420909301919091559154915190917f338f08987402f06ff139973e01a7bfc941fdb1a871ee7ce4116fed2ecfe6c5939161125891908690611d6a565b60405180910390a2505050565b600760205260009081526040902080546106c190611a71565b606080606060006001805490506001600160401b038111156112a2576112a26117d8565b6040519080825280602002602001820160405280156112cb578160200160208202803683370190505b506001549091506000906001600160401b038111156112ec576112ec6117d8565b60405190808252806020026020018201604052801561131f57816020015b606081526020019060019003908161130a5790505b506001549091506000906001600160401b03811115611340576113406117d8565b60405190808252806020026020018201604052801561137357816020015b606081526020019060019003908161135e5790505b50905060005b60015481101561158e576001818154811061139657611396611acd565b600091825260209091206003909102015484516001600160a01b03909116908590839081106113c7576113c7611acd565b60200260200101906001600160a01b031690816001600160a01b031681525050600181815481106113fa576113fa611acd565b9060005260206000209060030201600101805461141690611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461144290611a71565b801561148f5780601f106114645761010080835404028352916020019161148f565b820191906000526020600020905b81548152906001019060200180831161147257829003601f168201915b50505050508382815181106114a6576114a6611acd565b6020026020010181905250600181815481106114c4576114c4611acd565b906000526020600020906003020160020180546114e090611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461150c90611a71565b80156115595780601f1061152e57610100808354040283529160200191611559565b820191906000526020600020905b81548152906001019060200180831161153c57829003601f168201915b505050505082828151811061157057611570611acd565b6020026020010181905250808061158690611c54565b915050611379565b5091959094509092509050565b600360205281600052604060002081815481106115b757600080fd5b90600052602060002001600091509150505481565b600460205260009081526040902080546106c190611a71565b5080546115f190611a71565b6000825580601f10611601575050565b601f01602090049060005260206000209081019061161f919061165e565b50565b508054600082559060005260206000209081019061161f919061165e565b508054600082559060005260206000209081019061161f9190611677565b5b80821115611673576000815560010161165f565b5090565b8082111561167357600061168b82826115e5565b50600101611677565b6000602082840312156116a657600080fd5b5035919050565b6000815180845260005b818110156116d3576020818501810151868301820152016116b7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0384168152606060208201819052600090611717908301856116ad565b828103604084015261172981856116ad565b9695505050505050565b80356001600160a01b038116811461174a57600080fd5b919050565b60006020828403121561176157600080fd5b61176a82611733565b9392505050565b60208152600061176a60208301846116ad565b602080825282516001600160a01b031682820152820151606060408301526000906117b260808401826116ad565b90506040840151601f198483030160608501526117cf82826116ad565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117ff57600080fd5b81356001600160401b0380821115611819576118196117d8565b604051601f8301601f19908116603f01168101908282118183101715611841576118416117d8565b8160405283815286602085880101111561185a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561188f57600080fd5b61189884611733565b925060208401356001600160401b03808211156118b457600080fd5b6118c0878388016117ee565b935060408601359150808211156118d657600080fd5b506118e3868287016117ee565b9150509250925092565b6000806040838503121561190057600080fd5b61190983611733565b946020939093013593505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561195f57828403895261194d8483516116ad565b98850198935090840190600101611935565b5091979650505050505050565b604080825283519082018190526000906020906060840190828701845b828110156119a557815184529284019290840190600101611989565b505050838103828501526117298186611917565b600080604083850312156119cc57600080fd5b6119d583611733565b915060208301356001600160401b038111156119f057600080fd5b6119fc858286016117ee565b9150509250929050565b606080825284519082018190526000906020906080840190828801845b82811015611a485781516001600160a01b031684529284019290840190600101611a23565b50505083810382850152611a5c8187611917565b91505082810360408401526117298185611917565b600181811c90821680611a8557607f821691505b6020821081036106ae57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d155cd95c881b9bdd08199bdd5b9960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b601f821115611b2d57600081815260208120601f850160051c81016020861015611b0a5750805b601f850160051c820191505b81811015611b2957828155600101611b16565b5050505b505050565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115611b6057611b606117d8565b611b7481611b6e8454611a71565b84611ae3565b602080601f831160018114611ba35760008415611b915750858301515b611b9b8582611b32565b865550611b29565b600085815260208120601f198616915b82811015611bd257888601518255948401946001909101908401611bb3565b5085821015611bf05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115611c2957611c29611c00565b92915050565b604081526000611c4260408301856116ad565b82810360208401526117cf81856116ad565b600060018201611c6657611c66611c00565b5060010190565b80820180821115611c2957611c29611c00565b818103611c8b575050565b611c958254611a71565b6001600160401b03811115611cac57611cac6117d8565b611cba81611b6e8454611a71565b6000601f821160018114611ce85760008315611cd65750848201545b611ce08482611b32565b855550611d4d565b600085815260209020601f19841690600086815260209020845b83811015611d225782860154825560019586019590910190602001611d02565b5085831015611d405781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fd5b828152604060208201526000611d8360408301846116ad565b94935050505056fea26469706673582212204bf21b896a64ecb45f0dd45058ebe0ade0df220e65dbd3f39390b78256d44d2864736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "contractName",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 15,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userKeys",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(UserKeyInfo)8_storage)dyn_storage"
      },
      {
        "astId": 18,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "messageCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userMessageIds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 27,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userToKey",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 31,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 36,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userMessages",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "messageIdToMessage",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 44,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "messageIdToOwner",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(UserKeyInfo)8_storage)dyn_storage": {
        "base": "t_struct(UserKeyInfo)8_storage",
        "encoding": "dynamic_array",
        "label": "struct UserKeyStorage.UserKeyInfo[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserKeyInfo)8_storage": {
        "encoding": "inplace",
        "label": "struct UserKeyStorage.UserKeyInfo",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "username",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "encryptedKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}